console.log("GenericCreateAsyncThunk")

const apiClient = axios.create({
  baseURL: BASE_URL,
  headers: {
    'Content-Type': 'application/json',
  },
});

apiClient.interceptors.response.use(
  response => response,
  error => {
    console.error('API call failed:', error);
    
    // Handle specific error cases
    if (error.response.status === 401) {
      // Unauthorized
    } else if (error.response.status === 404) {
      // Not found
    }
    
    return Promise.reject(error);
  }
);

////Create a Generic API Function
import axios from 'axios';

export const BASE_URL = 'http://localhost:8080/api';

const apiClient = axios.create({
  baseURL: BASE_URL,
  headers: {
    'Content-Type': 'application/json',
  },
});

// Generic API request function
export const apiRequest = async (method, url, data = {}, params = {}) => {
  try {
    const response = await apiClient({
      method,
      url,
      data,
      params,
    });
    return response.data; // Return only the data from response
  } catch (error) {
    console.error(`API Error (${method.toUpperCase()} ${url}):`, error);
    return Promise.reject(error);
  }
};

export default apiClient;
